// Generated by @wagmi/cli@0.1.15 on 5/10/2023 at 12:05:13 AM
import {
  useNetwork,
  useContract,
  UseContractConfig,
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  Address,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
} from 'wagmi'
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ZKVoting
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbfdF33c66A1b334fD06d6655e8c389c416c2fd3a)
 * -
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x925a401C30309F8586ee68de29d615D80C188bE4)
 */
export const zkVotingABI = [
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_pollId', internalType: 'uint256', type: 'uint256' },
      { name: '_proposal', internalType: 'string', type: 'string' },
    ],
    name: 'addPoll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPollIds',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'pollIds',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'polls',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
] as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbfdF33c66A1b334fD06d6655e8c389c416c2fd3a)
 * -
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x925a401C30309F8586ee68de29d615D80C188bE4)
 */
export const zkVotingAddress = {
  5: '0xbfdF33c66A1b334fD06d6655e8c389c416c2fd3a',
  1337: '0xd3880d89Cf6604875b51edB69d88e56F4f6588c8',
  31337: '0xd3880d89Cf6604875b51edB69d88e56F4f6588c8',
  11155111: '0x925a401C30309F8586ee68de29d615D80C188bE4',
} as const

/**
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbfdF33c66A1b334fD06d6655e8c389c416c2fd3a)
 * -
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x925a401C30309F8586ee68de29d615D80C188bE4)
 */
export const zkVotingConfig = {
  address: zkVotingAddress,
  abi: zkVotingABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link zkVotingABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbfdF33c66A1b334fD06d6655e8c389c416c2fd3a)
 * -
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x925a401C30309F8586ee68de29d615D80C188bE4)
 */
export function useZkVoting(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof zkVotingAddress
  } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContract({
    abi: zkVotingABI,
    address: zkVotingAddress[chainId as keyof typeof zkVotingAddress],
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zkVotingABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbfdF33c66A1b334fD06d6655e8c389c416c2fd3a)
 * -
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x925a401C30309F8586ee68de29d615D80C188bE4)
 */
export function useZkVotingRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof zkVotingABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof zkVotingABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof zkVotingAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: zkVotingABI,
    address: zkVotingAddress[chainId as keyof typeof zkVotingAddress],
    ...config,
  } as UseContractReadConfig<typeof zkVotingABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zkVotingABI}__ and `functionName` set to `"getPollIds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbfdF33c66A1b334fD06d6655e8c389c416c2fd3a)
 * -
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x925a401C30309F8586ee68de29d615D80C188bE4)
 */
export function useZkVotingGetPollIds<
  TSelectData = ReadContractResult<typeof zkVotingABI, 'getPollIds'>,
>(
  config: Omit<
    UseContractReadConfig<typeof zkVotingABI, 'getPollIds', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zkVotingAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: zkVotingABI,
    address: zkVotingAddress[chainId as keyof typeof zkVotingAddress],
    functionName: 'getPollIds',
    ...config,
  } as UseContractReadConfig<typeof zkVotingABI, 'getPollIds', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zkVotingABI}__ and `functionName` set to `"pollIds"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbfdF33c66A1b334fD06d6655e8c389c416c2fd3a)
 * -
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x925a401C30309F8586ee68de29d615D80C188bE4)
 */
export function useZkVotingPollIds<
  TSelectData = ReadContractResult<typeof zkVotingABI, 'pollIds'>,
>(
  config: Omit<
    UseContractReadConfig<typeof zkVotingABI, 'pollIds', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zkVotingAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: zkVotingABI,
    address: zkVotingAddress[chainId as keyof typeof zkVotingAddress],
    functionName: 'pollIds',
    ...config,
  } as UseContractReadConfig<typeof zkVotingABI, 'pollIds', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zkVotingABI}__ and `functionName` set to `"polls"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbfdF33c66A1b334fD06d6655e8c389c416c2fd3a)
 * -
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x925a401C30309F8586ee68de29d615D80C188bE4)
 */
export function useZkVotingPolls<
  TSelectData = ReadContractResult<typeof zkVotingABI, 'polls'>,
>(
  config: Omit<
    UseContractReadConfig<typeof zkVotingABI, 'polls', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zkVotingAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractRead({
    abi: zkVotingABI,
    address: zkVotingAddress[chainId as keyof typeof zkVotingAddress],
    functionName: 'polls',
    ...config,
  } as UseContractReadConfig<typeof zkVotingABI, 'polls', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zkVotingABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbfdF33c66A1b334fD06d6655e8c389c416c2fd3a)
 * -
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x925a401C30309F8586ee68de29d615D80C188bE4)
 */
export function useZkVotingWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof zkVotingAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof zkVotingABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof zkVotingABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof zkVotingABI, TFunctionName>({
    abi: zkVotingABI,
    address: zkVotingAddress[chainId as keyof typeof zkVotingAddress],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zkVotingABI}__ and `functionName` set to `"addPoll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbfdF33c66A1b334fD06d6655e8c389c416c2fd3a)
 * -
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x925a401C30309F8586ee68de29d615D80C188bE4)
 */
export function useZkVotingAddPoll<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof zkVotingAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof zkVotingABI, 'addPoll'>['abi'],
        'addPoll'
      > & { address?: Address; chainId?: TChainId; functionName?: 'addPoll' }
    : UseContractWriteConfig<TMode, typeof zkVotingABI, 'addPoll'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'addPoll'
      } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return useContractWrite<TMode, typeof zkVotingABI, 'addPoll'>({
    abi: zkVotingABI,
    address: zkVotingAddress[chainId as keyof typeof zkVotingAddress],
    functionName: 'addPoll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zkVotingABI}__.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbfdF33c66A1b334fD06d6655e8c389c416c2fd3a)
 * -
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x925a401C30309F8586ee68de29d615D80C188bE4)
 */
export function usePrepareZkVotingWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zkVotingABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof zkVotingAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: zkVotingABI,
    address: zkVotingAddress[chainId as keyof typeof zkVotingAddress],
    ...config,
  } as UsePrepareContractWriteConfig<typeof zkVotingABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zkVotingABI}__ and `functionName` set to `"addPoll"`.
 *
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xbfdF33c66A1b334fD06d6655e8c389c416c2fd3a)
 * -
 * -
 * - [__View Contract on Sepolia Etherscan__](https://sepolia.etherscan.io/address/0x925a401C30309F8586ee68de29d615D80C188bE4)
 */
export function usePrepareZkVotingAddPoll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zkVotingABI, 'addPoll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zkVotingAddress } = {} as any,
) {
  const { chain } = useNetwork()
  const chainId = config.chainId ?? chain?.id
  return usePrepareContractWrite({
    abi: zkVotingABI,
    address: zkVotingAddress[chainId as keyof typeof zkVotingAddress],
    functionName: 'addPoll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zkVotingABI, 'addPoll'>)
}
